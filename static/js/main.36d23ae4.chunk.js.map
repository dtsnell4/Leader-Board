{"version":3,"sources":["images/pga_logo.png","components/table.js","components/board.js","containers/board.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","TableComponent","props","players","handleDelete","handleEdit","map","player","react_default","a","createElement","key","name","score","className","Button","onClick","color","BoardPresentational","toggleModal","modalOpen","handleAdd","handleValidate","loadingPlayers","editing","src","logo","alt","width","height","id","Table","striped","length","table","colSpan","Modal","isOpen","toggle","formik_esm","initialValues","firstName","split","lastName","validate","values","onSubmit","_ref","setSubmitting","resetForm","_ref2","isSubmitting","ModalHeader","ModalBody","FormGroup","type","disabled","placeholder","msg","ModalFooter","BoardComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","saveToLocalStorage","this2","assertThisInitialized","LocalForage","setItem","state","then","value","console","log","catch","err","alert","compareObjects","b","comparison","toUpperCase","fieldInput","errors","concat","newscore","newState","editPlayer","find","f","sort","myObj","myArr","toConsumableArray","window","confirm","filteredPlayers","filter","obj","bind","getItem","savedPlayers","board","React","Component","App","containers_board","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.36d23ae4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pga_logo.dc72d69f.png\";","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst TableComponent = (props) => {\r\n  const {\r\n    players,\r\n    handleDelete,\r\n    handleEdit,\r\n  } = props;\r\n\r\n  const tableRows = players.map((player) => {\r\n    return (\r\n      <tr key={player.name}>\r\n        <td>{player.name}</td>\r\n        <td>{player.score}</td>\r\n        <td className=\"text-right\">\r\n          <Button \r\n          \tonClick={() => {\r\n                handleEdit(player.name);\r\n          \t}}\r\n          \tcolor=\"link\"\r\n          \tclassName=\"edit mr-3\">\r\n            <i className=\"fa fa-edit text-primary\"></i>\r\n          </Button>\r\n          <Button \r\n          \tonClick={() => {\r\n                handleDelete(player.name);\r\n          \t}} \r\n            color=\"link\" \r\n            className=\"delete mr-3\">\r\n            <i className=\"fa fa-trash text-danger\"></i>\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return tableRows;\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from 'react';\r\nimport {\r\n  Table,\r\n  Button,\r\n  ModalFooter, \r\n  Modal, \r\n  ModalHeader, \r\n  ModalBody, \r\n  FormGroup\r\n} from 'reactstrap';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport TableRows from './table'\r\nimport logo from '../images/pga_logo.png';\r\n\r\nconst BoardPresentational = (props) => {\r\n  const {\r\n    toggleModal,\r\n    modalOpen,\r\n    handleAdd,\r\n    handleValidate,\r\n    handleDelete,\r\n    handleEdit,\r\n    players,\r\n    loadingPlayers,\r\n    editing\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"py-4\">\r\n        <div className=\"container\">\r\n          <img src={logo} alt=\"PGA Logo\" className=\"float-left mr-3\" width=\"50\" height=\"50\" />\r\n          <h3 className=\"text-white\"> PGA Leader Board</h3>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"container\" id=\"main-wrapper\">\r\n        <div id=\"board\" className=\"mt-4\">\r\n          <div className=\"table-scroller\">\r\n            <Table striped className=\"table-fixed\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Score</th>\r\n                  <th> </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(players.length > 0) &&\r\n                  <TableRows players={players} handleDelete={handleDelete} handleEdit={handleEdit}/>\r\n                }\r\n                {!(players.length > 0) && loadingPlayers &&\r\n                  <tr><td colSpan=\"3\">Checking for saved players... <i className=\"fa fa-spinner fa-spin\"></i></td></tr>\r\n                }\r\n                {!(players.length > 0) && !loadingPlayers &&\r\n                  <tr><td colSpan=\"3\">The are no players currently on the board.  Click \"Add Players\" below to begin.</td></tr>\r\n                }\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <Button color=\"primary\" onClick={toggleModal}>Add Players</Button>\r\n            <Modal isOpen={modalOpen} toggle={toggleModal} className=\"add-player-modal\">\r\n              <Formik\r\n                initialValues={{ \r\n                  firstName: editing ? editing.name.split(\", \")[1] : '', \r\n                  lastName: editing ? editing.name.split(\", \")[0] : '', \r\n                  score: editing ? editing.score : '' }}\r\n                validate={values => {\r\n                  return handleValidate(values);\r\n                }}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                  handleAdd(values, setSubmitting, resetForm);\r\n                }}\r\n              >\r\n                {({ isSubmitting }) => (\r\n                <Form>\r\n                  <ModalHeader toggle={toggleModal}>\r\n                    {editing && \"Update Score\" || \"Add Players\"}\r\n                  </ModalHeader>\r\n                  <ModalBody >\r\n                      <FormGroup>\r\n                        <Field className=\"form-control\" type=\"text\" name=\"firstName\" id=\"firstName\" disabled ={editing} placeholder=\"First Name\" />\r\n                        <ErrorMessage name=\"firstName\">{msg => <div className=\"invalid-input\">{msg}</div>}</ErrorMessage>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Field className=\"form-control\" type=\"text\" name=\"lastName\" id=\"lastName\" disabled ={editing} placeholder=\"Last Name\" />\r\n                        <ErrorMessage name=\"lastName\">{msg => <div className=\"invalid-input\">{msg}</div>}</ErrorMessage>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Field className=\"form-control\" type=\"number\" name=\"score\" id=\"score\" placeholder=\"Score\" />\r\n                        <ErrorMessage name=\"score\">{msg => <div className=\"invalid-input\">{msg}</div>}</ErrorMessage>\r\n                      </FormGroup>\r\n                  </ModalBody>\r\n                  <ModalFooter className=\"justify-content-center\">\r\n                    <Button color=\"secondary\" onClick={toggleModal}>Cancel</Button>{' '}\r\n                    <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>{editing && \"Update\" || \"Add\"}</Button>\r\n                  </ModalFooter>\r\n                 </Form>\r\n                )}\r\n              </Formik>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardPresentational;\r\n","import React from 'react';\r\nimport LocalForage from 'localforage';\r\nimport BoardPresentational from '../components/board';\r\n\r\nclass BoardComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Set initial state\r\n    this.state = {\r\n    \tplayers: [],\r\n      modalOpen: false,\r\n      loadingPlayers: false,\r\n      editing: false\r\n    };\r\n\r\n    // Bind handlers that will be passed as props\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n\t  this.handleDelete = this.handleDelete.bind(this);\r\n\t  this.handleValidate = this.handleValidate.bind(this);\r\n\t  this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n  \t// On initialization, displays a \"loading\" message while checking localStorage for saved players\r\n  \tthis.setState(prevState => ({\r\n      loadingPlayers: true\r\n    }));\r\n  \tconst this2 = this;\r\n\r\n  \tLocalForage.getItem('players').then(function(savedPlayers) {\r\n\t\t  if (savedPlayers) {\r\n\t\t\t  this2.setState(prevState => ({\r\n\t\t      players: savedPlayers.players ? savedPlayers.players : [],\r\n\t\t    }), function () {\r\n\t\t\t\t  this2.setState(prevState => ({\r\n\t\t\t      loadingPlayers: false\r\n\t\t\t    }));\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis2.setState(prevState => ({\r\n\t\t      loadingPlayers: false\r\n\t\t    }));\r\n\t\t\t}\r\n\t\t}).catch(function(err) {\r\n\t\t  console.log('Error getting players from localStorage:', err);\r\n\t\t});\r\n\t}\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      modalOpen: !prevState.modalOpen\r\n    }));\r\n  }\r\n\r\n  saveToLocalStorage = (players) => {\r\n  \tconst this2 = this;\r\n\t\tLocalForage.setItem('players', this2.state).then(function (value) {\r\n\t    console.log('Players successfully saved');\r\n\t\t}).catch(function(err) {\r\n\t    alert('Error saving players to localStorage:', err);\r\n\t\t});\r\n\t}\r\n\r\n\t// Utilitiy function to sort objects when adding/updating players\r\n\tcompareObjects = () => {\r\n\t  return function (a, b) {\r\n\t    let comparison = 0;\r\n\t    if (a['score'] > b['score']) {\r\n\t      comparison = 1;\r\n\t    } else if (a['score'] < b['score']) {\r\n\t      comparison = -1;\r\n\t    } else if (a['score'] === b['score']) {  // Scores are equal, sort by last name\r\n  \t    if (a['name'].toUpperCase() > b['name'].toUpperCase()) {\r\n\t\t      comparison = 1;\r\n\t\t    } else if (a['name'].toUpperCase() < b['name'].toUpperCase()) {\r\n\t\t      comparison = -1;\r\n\t\t    }\r\n\t    }\r\n\r\n\t    return comparison;\r\n\t  };\r\n\t}\r\n\r\n  handleValidate = (fieldInput) => {\r\n  \tlet errors = {};\r\n    if (!fieldInput.firstName) {\r\n      errors.firstName = 'First Name is Required';\r\n    }\r\n    if (!fieldInput.lastName) {\r\n      errors.lastName = 'Last Name is Required';\r\n    }\r\n    if (!fieldInput.score) {\r\n      errors.score = 'Score is Required';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\thandleAdd = (player, setSubmitting, resetForm) => {\r\n\t\tconst name = `${player.lastName}, ${player.firstName}`; \r\n\t\tconst newscore = player.score;\r\n\r\n\t\t// Updating score of an existing player\r\n\t\tif (this.state.editing) {\r\n\t\t \tconst newState = this.state.players\r\n\t\t\tconst editPlayer = newState.find(f => f.name === name);\r\n\r\n\t\t\tif (editPlayer) editPlayer.score = newscore;\r\n\t\t\tnewState.sort(this.compareObjects());\r\n\r\n\t\t\tthis.setState(prevState => ({ \r\n\t\t    editing: false,\r\n\t\t    players: newState\r\n\t\t  }), function () {\r\n\t\t\t\tthis.saveToLocalStorage();\r\n\t\t\t\tthis.setState({ modalOpen: false });\r\n\t\t\t  setSubmitting(false);\r\n\t\t\t  resetForm();\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Adding a new player\r\n\t\tconst myObj = { name: name, score: player.score }\r\n\t\tconst myArr = [...this.state.players, myObj];\r\n\t\tmyArr.sort(this.compareObjects());\r\n\r\n\t\tthis.setState(prevState => ({\r\n      players: myArr\r\n    }), function () {\r\n\t\t\tthis.saveToLocalStorage();\r\n\t\t  setSubmitting(false);\r\n\t\t  resetForm();\r\n\t\t});\r\n  }\r\n\r\n  handleDelete = (name) => {\r\n  \tconst resp = window.confirm(\"Are you sure you want to remove this player from the leader board?\");\r\n\t\tif (resp === true) {\r\n\t  \tconst filteredPlayers = this.state.players.filter(function( obj ) {\r\n\t\t\t  return obj.name !== name;\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState(prevState => ({\r\n\t      players: filteredPlayers\r\n\t    }), function () {\r\n\t\t\t\tthis.saveToLocalStorage();\r\n\t\t\t});\r\n\t\t}\r\n  }\r\n\r\n  handleEdit = (name, setSubmitting, resetForm) => {\r\n  \t// Get the player that is being edited to populate the fields, open Edit Score modal\r\n  \tconst editPlayer = this.state.players.filter(player => player.name === name);\r\n\r\n  \tthis.setState(prevState => ({\r\n\t      editing: editPlayer[0]\r\n\t  }), function() {\r\n\t  \tthis.toggleModal();\r\n\t  });\r\n  }\r\n\r\n\trender() {\r\n    return <BoardPresentational \r\n    \tplayers={this.state.players}\r\n    \tloadingPlayers={this.state.loadingPlayers}\r\n    \thandleAdd={this.handleAdd} \r\n    \thandleValidate={this.handleValidate}\r\n    \thandleDelete={this.handleDelete}\r\n    \thandleEdit={this.handleEdit}\r\n    \tmodalOpen={this.state.modalOpen} \r\n    \ttoggleModal={this.toggleModal} \r\n    \tediting={this.state.editing}\r\n    />;\r\n  }\r\n}\r\n\r\nexport default BoardComponent;\r\n","import React, { Component } from 'react';\nimport BoardComponent from './containers/board'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BoardComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}